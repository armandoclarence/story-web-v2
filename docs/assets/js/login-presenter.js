var h=e=>{throw TypeError(e)};var c=(e,i,o)=>i.has(e)||h("Cannot "+o);var n=(e,i,o)=>(c(e,i,"read from private field"),o?o.call(e):i.get(e)),g=(e,i,o)=>i.has(e)?h("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(e):i.set(e,o),l=(e,i,o,s)=>(c(e,i,"write to private field"),s?s.call(e,o):i.set(e,o),o);var t,a,r;class d{constructor({view:i,model:o,authModel:s}){g(this,t);g(this,a);g(this,r);l(this,t,i),l(this,a,o),l(this,r,s)}async getLogin({email:i,password:o}){if(!navigator.onLine){n(this,t).loginFailed("Anda hanya bisa login saat online.");return}n(this,t).showSubmitLoadingButton();try{const s=await n(this,a).getLogin({email:i,password:o});if(!s.ok){console.error("getLogin: response:",s),n(this,t).loginFailed(s.message);return}n(this,r).putAccessToken(s.loginResult.token),n(this,t).loginSuccessfully(s.message)}catch(s){console.error("getLogin: error:",s),n(this,t).loginFailed(s.message)}finally{n(this,t).hideSubmitLoadingButton()}}}t=new WeakMap,a=new WeakMap,r=new WeakMap;export{d as default};
